---
const links = [
  { text: 'Home', href: '/' },
  { text: 'About', href: '/#about' },
  { text: 'Projects', href: '/#projects' },
  { text: 'Blog', href: '/blog' },
  { text: 'Contact', href: '/#contact' },
];
---

<header class="fixed w-full bg-white bg-opacity-90 dark:bg-dark-900 dark:bg-opacity-90 backdrop-blur-sm z-50 transition-all duration-300 shadow-sm">
  <div class="container-custom py-4 flex items-center justify-between">
    <a href="/" class="text-2xl font-bold text-primary-600 dark:text-primary-400 flex items-center gap-2">
      <span class="text-dark-900 dark:text-white">Ankit</span>
      <span class="text-primary-600 dark:text-primary-400">Raj</span>
    </a>
    
    <!-- Desktop Navigation -->
    <nav class="hidden md:flex items-center space-x-8">
      {links.map(link => (
        <a 
          href={link.href}
          class="font-medium text-dark-600 dark:text-dark-300 hover:text-primary-600 dark:hover:text-primary-400 transition-colors duration-300"
        >
          {link.text}
        </a>
      ))}
      <button id="theme-toggle" aria-label="Toggle dark mode" class="p-2 rounded-full bg-dark-100 dark:bg-dark-800 text-dark-600 dark:text-dark-300">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 dark:hidden" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z" />
        </svg>
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 hidden dark:block" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z" />
        </svg>
      </button>
    </nav>
    
    <!-- Mobile Menu Button -->
    <button id="mobile-menu-toggle" class="md:hidden p-2 rounded-lg text-dark-600 dark:text-dark-300" aria-label="Toggle menu">
      <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
      </svg>
    </button>
  </div>
  
  <!-- Mobile Navigation -->
  <div id="mobile-menu" class="md:hidden hidden bg-white dark:bg-dark-900 shadow-lg">
    <div class="container-custom py-4 flex flex-col space-y-4">
      {links.map(link => (
        <a 
          href={link.href}
          class="py-2 px-4 font-medium text-dark-600 dark:text-dark-300 hover:text-primary-600 dark:hover:text-primary-400 transition-colors duration-300"
        >
          {link.text}
        </a>
      ))}
      <button id="mobile-theme-toggle" aria-label="Toggle dark mode" class="flex items-center py-2 px-4 font-medium text-dark-600 dark:text-dark-300 hover:text-primary-600 dark:hover:text-primary-400 transition-colors duration-300">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 dark:hidden" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z" />
        </svg>
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 hidden dark:block" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z" />
        </svg>
        <span class="dark:hidden">Dark Mode</span>
        <span class="hidden dark:block">Light Mode</span>
      </button>
    </div>
  </div>
</header>

<script>
  // Theme toggle functionality
  function setupThemeToggle() {
    const themeToggle = document.getElementById('theme-toggle');
    const mobileThemeToggle = document.getElementById('mobile-theme-toggle');
    
    const toggleTheme = () => {
      const isDark = document.documentElement.classList.toggle('dark');
      localStorage.setItem('theme', isDark ? 'dark' : 'light');
    };
    
    themeToggle?.addEventListener('click', toggleTheme);
    mobileThemeToggle?.addEventListener('click', toggleTheme);
  }
  
  // Mobile menu functionality
  function setupMobileMenu() {
    const mobileMenuToggle = document.getElementById('mobile-menu-toggle');
    const mobileMenu = document.getElementById('mobile-menu');
    
    mobileMenuToggle?.addEventListener('click', () => {
      mobileMenu?.classList.toggle('hidden');
    });
    
    // Close mobile menu when clicking on links
    const mobileLinks = mobileMenu?.querySelectorAll('a');
    mobileLinks?.forEach(link => {
      link.addEventListener('click', () => {
        mobileMenu?.classList.add('hidden');
      });
    });
  }
  
  // Header scroll behavior
  function setupHeaderScroll() {
    const header = document.querySelector('header');
    
    window.addEventListener('scroll', () => {
      if (window.scrollY > 50) {
        header?.classList.add('py-2', 'shadow');
        header?.classList.remove('py-4');
      } else {
        header?.classList.remove('py-2', 'shadow');
        header?.classList.add('py-4');
      }
    });
  }
  
  // Initialize
  document.addEventListener('astro:page-load', () => {
    setupThemeToggle();
    setupMobileMenu();
    setupHeaderScroll();
  });
  
  // Run immediately on first load
  setupThemeToggle();
  setupMobileMenu();
  setupHeaderScroll();
</script>